{"ast":null,"code":"var _jsxFileName = \"/Users/Brent/sei-autumn-sweaters/Projects/react-restaurant/restaurant-app-react/src/CitySearch/index.js\";\nimport React, { Component } from 'react';\n\nclass CitySearch extends Component {\n  constructor() {\n    super();\n\n    this.getCity = async () => {\n      try {\n        const city = await fetch(\"https://developers.zomato.com/api/v2.1/cities?q=\".concat(city.name), {\n          method: 'GET',\n          headers: {\n            'Content-Type': 'application/json',\n            'user-key': 'b0639e223ba019c8af3a7232ba72d6fa'\n          }\n        });\n        const cityJson = await city.json();\n        return cityJson;\n      } catch (err) {\n        console.log(err, 'getCity error');\n        return err;\n      }\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.currentTarget.name]: e.currentTarget.value\n      });\n    };\n\n    this.state = {\n      cities: [],\n      cityId: 305\n    };\n  }\n\n  componentDidMount() {\n    this.getMenu().then(data => {\n      // console.log(data, 'data from componentDidMount');\n      this.setState({\n        city: data\n      }); // console.log(this.state, \"this.state\");\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        restaurants = _this$state.restaurants; // console.log(restaurants.restaurants, 'restaurants in Render');\n\n    console.log(this.props.search, 'this.props.search in Render');\n\n    if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"main\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, cities.cities.map(city => React.createElement(\"div\", {\n        class: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, city.city.name), React.createElement(\"div\", {\n        class: \"meta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, city.state.name)))));\n    }\n  }\n\n}\n\nexport default CitySearch;","map":{"version":3,"sources":["/Users/Brent/sei-autumn-sweaters/Projects/react-restaurant/restaurant-app-react/src/CitySearch/index.js"],"names":["React","Component","CitySearch","constructor","getCity","city","fetch","name","method","headers","cityJson","json","err","console","log","handleChange","e","setState","currentTarget","value","state","cities","cityId","componentDidMount","getMenu","then","data","render","isLoaded","restaurants","props","search","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAClCE,EAAAA,WAAW,GAAG;AACb;;AADa,SASdC,OATc,GASJ,YAAW;AACpB,UAAI;AACH,cAAMC,IAAI,GAAG,MAAMC,KAAK,2DAAoDD,IAAI,CAACE,IAAzD,GAAiE;AACxFC,UAAAA,MAAM,EAAE,KADgF;AAExFC,UAAAA,OAAO,EAAE;AACR,4BAAgB,kBADR;AAEC,wBAAY;AAFb;AAF+E,SAAjE,CAAxB;AAOA,cAAMC,QAAQ,GAAG,MAAML,IAAI,CAACM,IAAL,EAAvB;AACA,eAAOD,QAAP;AACA,OAVD,CAUE,OAAME,GAAN,EAAW;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAAiB,eAAjB;AACA,eAAOA,GAAP;AACA;AACD,KAxBa;;AAAA,SAqCdG,YArCc,GAqCEC,CAAD,IAAO;AACrB,WAAKC,QAAL,CAAc;AACb,SAACD,CAAC,CAACE,aAAF,CAAgBX,IAAjB,GAAwBS,CAAC,CAACE,aAAF,CAAgBC;AAD3B,OAAd;AAGA,KAzCa;;AAGb,SAAKC,KAAL,GAAa;AACZC,MAAAA,MAAM,EAAE,EADI;AAEZC,MAAAA,MAAM,EAAE;AAFI,KAAb;AAIA;;AAmBDC,EAAAA,iBAAiB,GAAG;AACnB,SAAKC,OAAL,GACEC,IADF,CACQC,IAAD,IAAU;AACf;AACA,WAAKT,QAAL,CAAc;AACbZ,QAAAA,IAAI,EAAEqB;AADO,OAAd,EAFe,CAKf;AACA,KAPF;AAQA;;AAQDC,EAAAA,MAAM,GAAG;AAAA,sBACwB,KAAKP,KAD7B;AAAA,QACFQ,QADE,eACFA,QADE;AAAA,QACQC,WADR,eACQA,WADR,EAER;;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKgB,KAAL,CAAWC,MAAvB,EAA+B,6BAA/B;;AACA,QAAG,CAACH,QAAJ,EAAc;AACb,aAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAN;AACA,KAFD,MAIK;AACL,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACEP,MAAM,CAACA,MAAP,CAAcW,GAAd,CAAkB3B,IAAI,IACnB;AAAK,QAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqBA,IAAI,CAACA,IAAL,CAAUE,IAA/B,CADF,EAEE;AAAK,QAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmBF,IAAI,CAACe,KAAL,CAAWb,IAA9B,CAFF,CADH,CADF,CAFD,CADD;AAaC;AACD;;AAnEiC;;AAwEnC,eAAeL,UAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass CitySearch extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\tcities: [],\n\t\t\tcityId: 305\n\t\t}\n\t}\n\n\tgetCity = async() => {\n\t\ttry {\n\t\t\tconst city = await fetch(`https://developers.zomato.com/api/v2.1/cities?q=${city.name}`, {\n\t\t\t\tmethod: 'GET',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json',\n            \t\t'user-key': 'b0639e223ba019c8af3a7232ba72d6fa'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconst cityJson = await city.json();\n\t\t\treturn cityJson\n\t\t} catch(err) {\n\t\t\tconsole.log(err, 'getCity error');\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.getMenu()\n\t\t\t.then((data) => {\n\t\t\t\t// console.log(data, 'data from componentDidMount');\n\t\t\t\tthis.setState({\n\t\t\t\t\tcity: data\n\t\t\t\t})\n\t\t\t\t// console.log(this.state, \"this.state\");\n\t\t\t})\n\t}\n\n\thandleChange = (e) => {\n\t\tthis.setState({\n\t\t\t[e.currentTarget.name]: e.currentTarget.value\n\t\t})\n\t}\n\n\trender() {\n\t\tlet { isLoaded, restaurants } = this.state;\n\t\t// console.log(restaurants.restaurants, 'restaurants in Render');\n\t\tconsole.log(this.props.search, 'this.props.search in Render');\n\t\tif(!isLoaded) {\n\t\t\treturn<div>Loading...</div>;\n\t\t}\n\n\t\telse {\n\t\treturn (\n\t\t\t<main>\n\n\t\t\t\t<tr>\n\t\t\t\t\t{cities.cities.map(city => (\n  \t\t\t\t\t\t\t<div class=\"content\">\n\t\t\t\t\t\t\t    <div class=\"header\">{city.city.name}</div>\n\t\t\t\t\t\t\t    <div class=\"meta\">{city.state.name}</div>\n  \t\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\t\n\t\t\t\t</tr>\n\t\t\t</main>\n\t\t\t)\n\t\t}\n\t}\n\n\n}\n\nexport default CitySearch;\n\n"]},"metadata":{},"sourceType":"module"}