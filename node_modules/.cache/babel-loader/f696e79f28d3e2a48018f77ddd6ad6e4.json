{"ast":null,"code":"var _jsxFileName = \"/Users/Brent/sei-autumn-sweaters/Projects/react-restaurant/restaurant-app-react/src/MenuContainer/index.js\";\nimport React, { Component } from 'react';\n\nclass MenuContainer extends Component {\n  constructor() {\n    super();\n\n    this.setRestaurants = () => {\n      this.setState({\n        restaurants: this.props.restaurants\n      });\n    };\n\n    this.handleCheckboxChange = async (e, favorite) => {\n      // this.setState({\n      // \tfavorites: [...this.state.favorites, e.target.name]\n      // }, () => {\n      // \tconsole.log(this.state.favorites, 'this.state.favorites in handleCheckboxChange');\n      // })\n      try {\n        // console.log(\"SOMETHING\");\n        const addFavorite = await fetch('http://localhost:8000/api/v1', {\n          method: \"POST\",\n          body: favorite,\n          credentials: 'include',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log(addFavorite.status, \"addFavorite\");\n\n        if (addFavorite.status !== 200) {\n          throw Error('404 from server');\n          console.log(addFavorite.status, 'addFavorite.status');\n        }\n\n        const addFavoriteResponse = await addFavorite.json();\n        console.log(addFavoriteResponse.data, \"Favorites DATA\");\n        this.setState({\n          faovrites: [...addFavorite.data]\n        });\n      } catch (err) {\n        console.log(err, 'addFavorite error');\n        return err;\n      }\n    };\n\n    this.getFavorites = async () => {\n      try {\n        console.log(this.props, 'props in get');\n        const responseGetFavorites = await fetch('http://localhost:8000/api/v1/' + this.props.userInfo.id);\n        console.log(responseGetFavorites, 'responseGetFavorites');\n        const favoritesResponse = await responseGetFavorites.json();\n        console.log((await favoritesResponse), '<-favoritesResponse');\n\n        if (favoritesResponse.status.code !== 200) {\n          throw Error('404 from server');\n        }\n\n        this.setState({\n          favorites: favoritesResponse.data\n        });\n      } catch (err) {\n        console.log(err, 'err from getFavorites');\n        return err;\n      }\n    };\n\n    this.state = {\n      restaurants: [],\n      isLoaded: false,\n      favorites: []\n    };\n  }\n\n  componentDidMount() {\n    this.setRestaurants();\n    this.setState({\n      isLoaded: true\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        isLoaded = _this$state.isLoaded,\n        restaurants = _this$state.restaurants; // if(!isLoaded) {\n    // \treturn<div>Loading...</div>;\n    // }\n    // else {\n\n    return React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.props.restaurants.map(restaurant => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      class: \"ui card\",\n      href: restaurant.restaurant.menu_url,\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        backgroundColor: 'aquamarine'\n      },\n      class: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, restaurant.restaurant.name, \">\"), React.createElement(\"div\", {\n      class: \"meta\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, restaurant.restaurant.cuisines), React.createElement(\"div\", {\n      class: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, restaurant.restaurant.location.address), React.createElement(\"input\", {\n      onChange: this.handleCheckboxChange,\n      name: restaurant.restaurant.name,\n      type: \"checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), \"Add to Favorites\")))))); // }\n  }\n\n}\n\nexport default MenuContainer;","map":{"version":3,"sources":["/Users/Brent/sei-autumn-sweaters/Projects/react-restaurant/restaurant-app-react/src/MenuContainer/index.js"],"names":["React","Component","MenuContainer","constructor","setRestaurants","setState","restaurants","props","handleCheckboxChange","e","favorite","addFavorite","fetch","method","body","credentials","headers","console","log","status","Error","addFavoriteResponse","json","data","faovrites","err","getFavorites","responseGetFavorites","userInfo","id","favoritesResponse","code","favorites","state","isLoaded","componentDidMount","render","map","restaurant","menu_url","backgroundColor","name","cuisines","location","address"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\n\nclass MenuContainer extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis.state = {\n\t\t\trestaurants: [],\n\t\t\tisLoaded: false,\n\t\t\tfavorites: []\n\t\t}\n\t}\n\n\tsetRestaurants = () => {\n\t\tthis.setState({\n\t\t\trestaurants: this.props.restaurants\n\t\t})\n\t}\n\n\thandleCheckboxChange = async (e, favorite) => {\n\t\t\n\t\t// this.setState({\n\t\t// \tfavorites: [...this.state.favorites, e.target.name]\n\t\t// }, () => {\n\t\t// \tconsole.log(this.state.favorites, 'this.state.favorites in handleCheckboxChange');\n\t\t// })\n\t\ttry {\n\t\t\t// console.log(\"SOMETHING\");\n\t\t\tconst addFavorite = await fetch('http://localhost:8000/api/v1', {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: favorite,\n\t\t\t\tcredentials: 'include',\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t}\n\t\t\t})\n\t\t\tconsole.log(addFavorite.status, \"addFavorite\");\n\t\t\tif(addFavorite.status !==200) {\n\t\t\t\tthrow Error('404 from server')\n\t\t\t\tconsole.log(addFavorite.status, 'addFavorite.status');\n\t\t\t}\n\t\t\tconst addFavoriteResponse = await addFavorite.json();\n\t\t\tconsole.log(addFavoriteResponse.data, \"Favorites DATA\");\n\t\t\tthis.setState({\n\t\t\t\tfaovrites: [...addFavorite.data]\n\t\t\t})\n\t\t} catch(err) {\n\t\t\tconsole.log(err, 'addFavorite error');\n\t\t\treturn err\n\t\t}\n\t}\n\n\tgetFavorites = async() => {\n\t\ttry {\n\t\t\tconsole.log(this.props, 'props in get');\n\t\t\tconst responseGetFavorites = await fetch('http://localhost:8000/api/v1/' + this.props.userInfo.id)\n\n\t\t\tconsole.log(responseGetFavorites, 'responseGetFavorites');\n\t\t\tconst favoritesResponse = await responseGetFavorites.json();\n\t\t\tconsole.log(await favoritesResponse, '<-favoritesResponse');\n\t\t\tif(favoritesResponse.status.code !== 200) {\n\t\t\t\tthrow Error('404 from server')\n\t\t\t}\n\t\t\tthis.setState({\n\t\t\t\tfavorites: favoritesResponse.data\n\t\t\t})\n\t\t} catch(err) {\n\t\t\tconsole.log(err, 'err from getFavorites');\n\t\t\treturn err\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setRestaurants();\n\t\tthis.setState({\n\t\t\tisLoaded: true\n\t\t})\n\n\t}\n\n\trender() {\n\n\t\tlet { isLoaded, restaurants } = this.state;\n\t\t\n\t\t// if(!isLoaded) {\n\t\t// \treturn<div>Loading...</div>;\n\t\t// }\n\n\t\t// else {\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t\n\t\t\t\t<tr >\n\t\t\t\t\t{this.props.restaurants.map(restaurant => (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a class=\"ui card\" href={restaurant.restaurant.menu_url} target=\"_blank\">\n  \t\t\t\t\t\t\t<div style={{ backgroundColor: 'aquamarine' }} class=\"content\">\n\t\t\t\t\t\t\t    <div class=\"header\">{restaurant.restaurant.name}></div>\n\t\t\t\t\t\t\t    <div class=\"meta\">{restaurant.restaurant.cuisines}</div>\n\t\t\t\t\t\t\t    <div class=\"description\">\n\t\t\t\t\t\t\t      {restaurant.restaurant.location.address}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<input onChange={this.handleCheckboxChange} name={restaurant.restaurant.name} type='checkbox'/>Add to Favorites\t\t\t\t\t\t\n  \t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</tr>\n\t\t\t</main>\n\t\t\t)\n\t\t// }\n\t}\n}\n\nexport default MenuContainer;"]},"metadata":{},"sourceType":"module"}